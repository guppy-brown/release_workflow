name: Create Release Branch

on: 
  workflow_dispatch:
  schedule:
  # every friday at AM11:00
    - cron: '0 2 * * 5'

jobs:
  create_release_branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
          fetch-depth: 0
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com
      - name: Install hub command
        run: |
          wget https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz
          tar xzf hub-linux-amd64-2.14.2.tgz
          sudo ./hub-linux-amd64-2.14.2/install
      - name: Get current version
        id: get_cur_ver
        run: |
          ver=`git tag --sort=-v:refname | head -n 1 | cut -d"v" -f2`
          echo "::set-output name=version::${ver}"
      - name: Bump version
        id: bump_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.get_cur_ver.outputs.version }}
          version-fragment: 'feature'
      - name: Create Release Branch
        run: |
          release_branch=release/v${{ steps.bump_version.outputs.next-version }}
          git checkout -b ${release_branch}
          git push origin ${release_branch}
      - name: Create History
        id: create_history
        run: |
          release_branch=release/v${{ steps.bump_version.outputs.next-version }}
          git checkout -b main origin/main
          log=`git log --merges --pretty=format:'%s (@%an)' --date=relative "main...${release_branch}"`
          echo "::set-output name=log::${log}"
      - name: Create Pull Request
        run: |
          release_branch=release/v${{ steps.bump_version.outputs.next-version }}
          hub pull-request \
              -b master \
              -h ${release_branch} \
              -m "[WIP] relase v${{ steps.bump_version.outputs.next-version }}"
              -m "## Command Result\n${steps.create_history.outpus.log}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
