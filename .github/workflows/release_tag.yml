name: Release Tag

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get version
        id: get_version
        run: |
          release_branch=${{ github.event.pull_request.head.ref }}
          echo ::set-output name=version::${release_branch#release/}
      - name: Create History
        id: create_history
        run: |
          prev_ver=`git tag --sort=-v:refname | head -n 1`
          git tag
          echo ${prev_ver}
          cmd="git log --merges --pretty=format:'%s (@%an)' --date=relative \"${prev_ver}...main\""
          log=`eval ${cmd}`
          echo "::set-output name=cmd::${cmd}"
          echo "::set-output name=log::${log}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: ${{ steps.get_version.outputs.version }}
          body: |+
            ## Executed command
            `${{ steps.create_history.outputs.cmd }}`
            ## Command result
            ${{ steps.create_history.outputs.log }}
          draft: false
          prerelease: true
